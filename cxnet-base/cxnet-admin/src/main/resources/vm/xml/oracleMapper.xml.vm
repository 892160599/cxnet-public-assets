<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${packageName}.${className}.mapper.${ClassName}Mapper">

    <!-- ${functionName} 结果集 -->
    <resultMap type="${packageName}.${className}.domain.${ClassName}" id="${ClassName}Result">
        #foreach ($column in $columns)
            <result property="${column.javaField}" column="${column.columnName}"/>
        #end
        #if($table.tree)
            <result property="parentName" column="parent_name"/>
        #end
    </resultMap>

    <!-- 查询${functionName} 通用sql -->
    <sql id="select${ClassName}Vo">
        select#foreach($column in $columns) $column.alias.$column.columnName#if($velocityCount != $columns.size()),#end#end

        from ${tableName} ${alias}
            #foreach($rel in $related)
                #set($joinType=$rel.joinType)
                #set($tblName=$rel.tableName)
                #set($ali=$rel.alias)
                #set($cols=$rel.columns)

                $joinType $tblName $ali ON #foreach($col in $cols)$ali.$col.columnA $col.queryType $col.alias.$col.columnB #if($velocityCount != $cols.size())AND #end#end
            #end

    </sql>

    #if($TreeName!='')
        <!-- 查询${functionName}下拉树列表 -->
        <select id="treeselectList" resultType="java.util.HashMap">
            select $options.lTreeRTable.treeCode as "id", $options.lTreeRTable.treeParentCode as "pid", $options.lTreeRTable.treeName as "label"
            from $options.lTreeRTable.tableName
        </select>
    #end

    <!-- 查询${functionName} 集合 -->
    <select id="select${ClassName}List" parameterType="${packageName}.${className}.domain.${ClassName}"
            resultMap="${ClassName}Result">
        <include refid="select${ClassName}Vo"/>
        <where>
            #foreach($column in $columns)
                #set($queryType=$column.queryType)
                #set($javaField=$column.javaField)
                #set($javaType=$column.javaType)
                #set($alias=$column.alias)
                #set($columnName=$column.columnName)
                #set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
                #if($column.query)
                    #if($column.queryType == "EQ")
                        <if test="$javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end">
                            and $alias.$columnName = #{$javaField}
                        </if>
                    #elseif($queryType == "NE")
                        <if test="$javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end">
                            and $alias.$columnName != #{$javaField}
                        </if>
                    #elseif($queryType == "GT")
                        <if test="$javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end">
                            and $alias.$columnName &gt; #{$javaField}
                        </if>
                    #elseif($queryType == "GTE")
                        <if test="$javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end">
                            and $alias.$columnName &gt;= #{$javaField}
                        </if>
                    #elseif($queryType == "LT")
                        <if test="$javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end">
                            and $alias.$columnName &lt; #{$javaField}
                        </if>
                    #elseif($queryType == "LTE")
                        <if test="$javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end">
                            and $alias.$columnName &lt;= #{$javaField}
                        </if>
                    #elseif($queryType == "LIKE")
                        <if test="$javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end">
                            and $alias.$columnName like concat(concat('%', #{$javaField}), '%')
                        </if>
                    #elseif($queryType == "BETWEEN")
                        <if test="params.begin$AttrName != null and params.begin$AttrName != '' and params.end$AttrName != null and params.end$AttrName != ''">
                            and $alias.$columnName between #{params.begin$AttrName} and #{params.end$AttrName}
                        </if>
                    #end
                #end
            #end
        </where>
        #if($table.tree)
            order by ${tree_parent_code}
        #end
    </select>

    <!-- 查询${functionName} ById -->
    <select id="select${ClassName}ById" parameterType="${pkColumn.javaType}" resultMap="${ClassName}Result">
        #if($table.crud)
            <include refid="select${ClassName}Vo"/>
            where ${pkColumn.columnName} = #{${pkColumn.javaField}}
        #elseif($table.tree)
            select#foreach($column in $columns) ${alias}.$column.columnName,#end p.${tree_name} as parent_name
            from ${tableName} ${alias}
            left join ${tableName} p on p.${pkColumn.columnName} = t.${tree_parent_code}
            where t.${pkColumn.columnName} = #{${pkColumn.javaField}}
        #end
    </select>

    <!-- 插入${functionName} -->
    <insert id="insert${ClassName}" parameterType="${packageName}.${className}.domain.${ClassName}">
        #if($pkColumn.increment)
            <selectKey keyProperty="${pkColumn.javaField}" resultType="long" order="BEFORE">
                SELECT seq_${tableName}.NEXTVAL as ${pkColumn.javaField} FROM DUAL
            </selectKey>
        #end
        insert into ${tableName}
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #foreach($column in $columns)
                #if($column.alias == "t0")
                    <if test="$column.javaField != null #if($column.javaType ==
                        'String' ) and $column.javaField != ''#end">$column.columnName,
                    </if>
                #end
            #end
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #foreach($column in $columns)
                #if($column.alias == "t0")
                    <if test="$column.javaField != null #if($column.javaType ==
                        'String' ) and $column.javaField != ''#end">#{$column.javaField},
                    </if>
                #end
            #end
        </trim>
    </insert>

    <!-- 修改${functionName} -->
    <update id="update${ClassName}" parameterType="${packageName}.${className}.domain.${ClassName}">
        update ${tableName}
        <trim prefix="SET" suffixOverrides=",">
            #foreach($column in $columns)
                #if($column.columnName != $pkColumn.columnName && $column.alias == "t0")
                    <if test="$column.javaField != null #if($column.javaType ==
                        'String' ) and $column.javaField != ''#end">$column.columnName = #{$column.javaField},
                    </if>
                #end
            #end
        </trim>
        where ${pkColumn.columnName} = #{${pkColumn.javaField}}
    </update>

    <!-- 删除${functionName} ById -->
    <delete id="delete${ClassName}ById" parameterType="${pkColumn.javaType}">
        delete
        from ${tableName} where ${pkColumn.columnName} = #{${pkColumn.javaField}}
    </delete>

    <!-- 批量删除${functionName} ByIds -->
    <delete id="delete${ClassName}ByIds" parameterType="String">
        delete from ${tableName} where ${pkColumn.columnName} in
        <foreach item="${pkColumn.javaField}" collection="array" open="(" separator="," close=")">
            #{${pkColumn.javaField}}
        </foreach>
    </delete>

    <!-- 批量插入${functionName} -->
    <insert id="insertBatch${ClassName}" parameterType="java.util.List">
        begin
        <foreach collection="list" item="item" index="index">
            insert into ${tableName}
            <trim prefix="(" suffix=")" suffixOverrides=",">
                #foreach($column in $columns)
                    #if($column.columnName == $pkColumn.columnName)
                        $pkColumn.columnName,
                    #elseif($column.alias == "t0")
                        <if test="item.$column.javaField != null #if($column.javaType ==
                            'String' ) and item.$column.javaField != ''#end">$column.columnName,
                        </if>
                    #end
                #end
            </trim>
            <trim prefix="values (" suffix=");" suffixOverrides=",">
                #foreach($column in $columns)
                    #if($column.columnName == $pkColumn.columnName)
                        seq_${tableName}.NEXTVAL,
                    #elseif($column.alias == "t0")
                        <if test="item.$column.javaField != null #if($column.javaType ==
                            'String' ) and item.$column.javaField != ''#end">#{item.$column.javaField},
                        </if>
                    #end
                #end
            </trim>
        </foreach>
        commit;
        end;
    </insert>

    <!-- 批量修改${functionName} -->
    <update id="updateBatch${ClassName}" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update ${tableName}
            <trim prefix="SET" suffixOverrides=",">
                #foreach($column in $columns)
                    #if($column.columnName != $pkColumn.columnName && $column.alias == "t0")
                        <if test="item.$column.javaField != null #if($column.javaType ==
                            'String' ) and item.$column.javaField != ''#end">$column.columnName =
                            #{item.$column.javaField},
                        </if>
                    #end
                #end
            </trim>
            <where>
                ${pkColumn.columnName} = #{item.${pkColumn.javaField}}
            </where>
        </foreach>
    </update>

</mapper>