package ${packageName}.${className}.service;

import ${packageName}.${className}.domain.${ClassName};
import java.util.List;
import java.util.Map;

/**
 * ${functionName}Service接口
 *
 * @author ${author}
 * @date ${datetime}
 */
public interface ${ClassName}ServiceI {
    /**
     * 查询${functionName}
     *
     * @param ${pkColumn.javaField} ${functionName}ID
     * @return ${functionName}
     */
    public ${ClassName} select${ClassName}ById(${pkColumn.javaType} ${pkColumn.javaField});

    /**
     * 查询${functionName}集合
     *
     * @param ${className} ${functionName}
     * @return ${functionName}集合
     */
    public List<${ClassName}> select${ClassName}List(${ClassName} ${className});

    /**
     * 新增${functionName}
     *
     * @param ${className} ${functionName}
     * @return 结果
     */
    public int insert${ClassName}(${ClassName} ${className});

    /**
     * 批量新增${functionName}
     *
     * @param ${className}s ${functionName}
     * @return 结果
     */
    public int insertBatch${ClassName}(List<${ClassName}> ${className}s);

    /**
     * 修改${functionName}
     *
     * @param ${className} ${functionName}
     * @return 结果
     */
    public int update${ClassName}(${ClassName} ${className});

    /**
     * 批量修改${functionName}
     *
     * @param ${className}s ${functionName}
     * @return 结果
     */
    public int updateBatch${ClassName}(List<${ClassName}> ${className}s);

    /**
     * 批量删除${functionName}
     *
     * @param ${pkColumn.javaField}s 需要删除的${functionName}ID
     * @return 结果
     */
    public int delete${ClassName}ByIds(${pkColumn.javaType}[] ${pkColumn.javaField}s);

    /**
     * 删除${functionName}信息
     *
     * @param ${pkColumn.javaField} ${functionName}ID
     * @return 结果
     */
    public int delete${ClassName}ById(${pkColumn.javaType} ${pkColumn.javaField});

    #if($TreeName!='')
        /**
         * 获取${functionName}下拉树列表
         */
        public List<Map> treeselectList();

    #end
}
